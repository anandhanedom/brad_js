**************** CHAPTER 1 ****************

* if/else statements allow you to make decisions in your code.

* while/for statements allow you to execute code many times by looping.

**************** CHAPTER 2 ****************

*  Math.random() => 0 to 0.99
*  Math.random() * 5 => 0 to 4.99

**************** CHAPTER 3 ****************

* JavaScript is 'pass-by-value'.

* #1: what happens when we don’t pass enough arguments? Undefined for missing args.
  #2: what happens when we pass too many argments? Extra args ignored.
  #3: what happens when we have NO parameters? No worries.

* If a variable is declared outside a function, it’s 'GLOBAL'.
  If it’s declared inside a function, it’s 'LOCAL'.
  'GLOBAL' can be shadowed by 'LOCAL'.

**************** CHAPTER 4 ****************

* Assigning a value to an item that doesn’t exist in the array will create a new
  item in the array.

* The 'while' loop is most often used when you don’t know how many times you need
  to loop, and you’re looping until a condition is met. 
  
* The 'for' loop is most often used when you know the number of times the loop needs
  to execute. 

**************** CHAPTER 5 ****************

* To delete a property: 'delete'. Eg. delete person.name

* A 'primitive variable' represents the actual value of the variable while an 'object  
  variable' represents a way to get to the object.

* If you change a property of the object in a function, you’re changing the property
  in the original object.

* You can think of 'this' like a variable that is assigned to the object whose method was just called.

* Looping through an object: for (var prop in chevy) {
 console.log(prop + ": " + chevy[prop]);
}

**************** CHAPTER 6 ****************

* window.onload=init; //On load call back
 
* You can get the value of an element’s attributes using the getAttribute method.
  --planet.setAttribute("class", "redtext");

* You can set the value of an element’s attributes using the setAttribute method.
  --scoop.getAttribute("alt");  

**************** CHAPTER 7 ****************

* typeof is an opertor.

* typeof null = object. typeof undefined = undefined. typeof NaN=number. 

* 0/0 is NaN. 100/0 is Infinity. typeof Infinity=number.

* NaN != NaN. Use 'ifNaN()'.

* undefined = null.

* If you try to add a number and a string, JavaScript converts the number to a string
  and concatenates the two.

* For arithmetic operators—like multiplication, division and subtraction—
  JS prefers to treat those as arithmetic operations, not string operations.